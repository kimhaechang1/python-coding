# 문제 설명
# 피보나치 수는 F(0) = 0, F(1) = 1일 때, 1 이상의 n에 대하여 F(n) = F(n-1) + F(n-2) 가 적용되는 수 입니다.
#
# 예를들어
#
# F(2) = F(0) + F(1) = 0 + 1 = 1
# F(3) = F(1) + F(2) = 1 + 1 = 2
# F(4) = F(2) + F(3) = 1 + 2 = 3
# F(5) = F(3) + F(4) = 2 + 3 = 5
# 와 같이 이어집니다.
#
# 2 이상의 n이 입력되었을 때, n번째 피보나치 수를 1234567으로 나눈 나머지를 리턴하는 함수, solution을 완성해 주세요.
#
# 제한 사항
# n은 2 이상 100,000 이하인 자연수입니다.
# 입출력 예
# n	return
# 3	2
# 5	5
# 입출력 예 설명
# 피보나치수는 0번째부터 0, 1, 1, 2, 3, 5, ... 와 같이 이어집니다.

def fibo(n):
    f = [0,1]
    for i in range(2,n+1):
        f.append(f[i-2]+f[i-1])
    return f
def solution(n):
    answer = 0
    answer = fibo(n)
    answer = answer[n] % 1234567
    print(answer)
    return answer

solution(4)

# 일반적인 재귀함수로는 시간 초과가 난다
# 따라서 다이나믹 프로그래밍의 바텀 업 방식을 사용한다
# 중간중간 계산결과를 리스트에 저장하고 그 다음 계산할 때 꺼내어 사용