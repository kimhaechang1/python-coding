"""
현민이는 게임 캐릭터가 맵 안에서 움직이는 시스템을 개발 중이다.
캐릭터가 있는 장소는 1x1크기의 정사각형으로 이뤄진 NxM 크기의 직사각형으로
각각의 칸은 육지 또는 바다이다.
캐릭터는 동서남북 중 한 곳을 바라본다.

맵의 각 칸은 (A,B)로 나타낼 수 있고, A는 북쪽으로부터 떨어진 칸의 개수,
B는 서쪽으로부터 떨어진 칸의 개수이다.
캐릭터는 상하좌우로 움직일 수 있고, 바다로 되어있는 공간에는 갈 수 없다.

캐릭터의 움직임을 설정하기 위해 정해 놓은 메뉴얼은 이러하다.

1. 현재위치에서 현재 방향을 기준으로 왼쪽방향부터 차례대로 갈 곳을 정한다.
2. 캐릭터의 바로 왼쪽 방향에 아직 가보지 않은 칸이 존재한다면
왼쪽 방향으로 회전한 다음 왼쪽으로 한 칸을 전진한다.
왼쪽 방향으로 가보지 않은 칸이 없다면, 왼쪽 방향으로 회전만 수행하고 1단계로 돌아간다.
3. 만약 네 방향 모두 이미 가본 칸이거나 바다로 되어 있는 칸인 경우에는, 바라보는 밯양을 유지한 채로 한 칸 뒤로 가고 1단계로 돌아간다.
단 이때 뒤쪽 방향이 바다인 칸이라 뒤로 갈 수 없는 경우에는 움직임을 멈춘다.

현민이는 위 과정을 반복적으로 수행하면서 캐릭터의 움직임에 이상이 있는지 테스트하려고 한다.
메뉴얼에 따라 캐릭터를 이동시킨 뒤에, 캐릭터가 방문한 칸의 수를 출력하는 프로그램을 만드시오.


첫째 줄에 맵의 크기가 주어짐
둘째 줄에 캐릭터가 있는 좌표 및 바라보고 있는 방향을 나타냄
셋째 줄 부터 지도를 입력
0 : 북쪽
1 : 동쪽
2 : 남쪽
3 : 서쪽
"""
# dx, dy 리스트를 만든다.
# 북, 동, 남, 서 순으로 돌면서 y,x,f를 업데이트 한다.
# 지나 온 자리는 2로 표시하고 만약 갈 수 없으며 바라보는 방향을 유지 한 채로 뒤로 한칸 물러난다.
# 물러 날때 뒤 칸이 바다라면 움직임을 멈춘다.
N, M = map(int, input().split())
y,x,f = list(map(int, input().split()))
map = [list(map(int, input().split())) for _ in range(4)]


f = 0
def turnLeft():
    global f
    f -=1
    if f == -1:
        f =3
def solution(map, y,x):
    global f
    dy= [-1,0,1,0]
    dx = [0,1,0,-1]
    map[y][x] =2
    cnt = 1
    turn = 0
    while True:
        turnLeft()
        ny = y+dy[f]
        nx = x+dx[f]
        if map[ny][nx] == 0 and map[ny][nx] != 2:
            map[ny][nx] = 2
            y = ny
            x = nx
            turn = 0
            cnt+=1
            continue
        else:
            turn+=1
        if turn  == 4:
            nx = x - dx[f]
            ny = y - dy[f]
            if map[ny][nx] == 0:
                x = nx
                y= ny
            else:
                break
            turn=0
    return cnt

print(solution(map, y,x))


# 시뮬레이션 문제이다.
# 바라보는 방향을 처리해줘야하고, 나아 갈 좌표 및 방문자, 바다를 처리해야한다.
# 좌표 관련 문제가 나오면 dy, dx 리스트와 ny, nx를 사용하는 습관이 되어있어야 한다.
# 각각의 처리상황을 고려했을 때 바라보는 방향에 따라 나아가는 방향이 결정되고
# 나아갈 수 있는 곳이라면 나아가는데 이 때 나아 갈 수 없다면 바라보는 방향을 유지 한채로 1번 단계를 다시 수행한다.
# 시작지점 또한 방문 한 곳으로 처리를 해야한다.
# 초기 바라보고 있는 위치에서 계속 왼쪽으로 돌려줄 함수가 필요하다
# 두 함수에서 같은 변수를 사용하기 위해서는 전역으로 처리 해줘야 한다.
# 따라서 총 왼쪽으로 4번 돌렸는데도 불구하고 갈 수 없다면
# 다음에 가야 할 위치를 뒤로 한칸으로 정하고 이마저도 바다라서 갈 수 없다면 break
