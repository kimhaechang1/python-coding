# 숫자 카드 게임은 여러 개의 숫자 카드 중에서 가장 높은 숫자가 쓰인 카드 한 장을 뽑는 게임이다.
# 단, 게임의 룰을 지키며 카드를 뽑아야 하고 룰은 다음과 같다
# 1. 숫자가 쓰인 카드들이 N x M 형태로 놓여 있다. 이때 N 은 행의 개수를 의미하며 M은 열의 개수를 의미한다.
# 2. 먼저 뽑고자 하는 카드가 포함되어 있는 행을 선택한다.
# 3. 그다음 선택된 행에 포함된 카드들 중 가장 숫자가 낮은 카드를 뽑아야 한다.
# 4. 따라서 처음에 카드를 골라낼 행을 선택할 때, 이후에 해당 행에서 가장 숫자가 낮은 카드를 뽑을 것을 고려하여 최종적으로 가장 높은 숫자의 카드를 뽑을 수 있도록 전략을 세워야 한다.

# 예를 들어 3 x 3 형태로 카드들이 다음과 같이 놓여 있다고 가정하자.
# 1 2 3
# 4 1 4
# 2 2 2

# 여기서 카드를 골라 낼 행을 고를 때 첫 번째 혹은 두 번째 행을 선택하는 경우, 최종적으로 뽑는 카드는 1이다.
# 하지만 세 번째 행을 섵개하는 경우 최종적으로 뽑는 카드는 2이다.
# 따라서 이 예제에서는 세 번째 행을 선택하여 숫자 2가 쓰여진 카드를 뽑는 것이 정답이다.
#
# 카드들이 N x M 형태로 놓여 있을 때, 게임의 룰에 맞게 카드를 뽑는 프로그램을 만드시오.

# 입력 조건
# 첫째 줄에 숫자 카드들이 놓인 행의 개수 N과 열의 개수 M이 공백을 기준으로 하여 각각 자연수로 주어진다.(1<=N,M<=100)
# 둘째 줄부터 N개의 줄에 걸쳐 각 카드에 적힌 숫자가 주어진다. 각 수자는 1 이상 10000이하의 자연수이다.

# 출력 조건
# 첫째 줄에 게임의 룰에 맞게 선택한 카드에 적힌 숫자를 출력한다.

# 입력 예시 1
# 3 3
# 3 1 2
# 4 1 4
# 2 2 2

# 출력 예시 1
# 2

# 입력 예시 2
# 2 4
# 7 3 1 8
# 3 3 3 4

# 출력 예시 2
# 3


# 2차원 배열로 받은 리스트에서 각 행별로 최소값들을 받아 리스트 작성후 max 를 통해 최댓값을 return

def solution(card):
    result = []
    for i in range(len(card)):
        result.append(min(card[i]))
    print(result)

    return max(result)


n,m = map(int,input().split())
c = [[0]*m for _ in range(n)]
for i in range(n):
    c[i] = list(map(int,input().split()))
print(solution(c))
